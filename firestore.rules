rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users Collection
    match /users/{userId} {
      
      // Function to check if the user is an Admin
      function isAdmin() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid))
               && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      }

      // Allow Admins to read and write any user document
      allow read, write: if isAdmin();

      // Allow users to create their own documents with specific fields
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.keys().hasAll(['name', 'cuEmail', 'regNo', 'role', 'isFirstLogin', 'createdBy'])
                    && request.resource.data.name is string
                    && request.resource.data.cuEmail is string
                    && request.resource.data.regNo is string
                    && request.resource.data.role is string
                    && request.resource.data.isFirstLogin == true
                    && request.resource.data.createdBy is string;

      // Allow users to read their own documents
      allow read: if request.auth != null
                 && request.auth.uid == userId;

      // Allow users to update specific fields in their own documents
      allow update: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.data.keys().hasOnly(['name', 'cuEmail', 'role'])
                   && request.resource.data.name is string
                   && request.resource.data.cuEmail is string
                   && request.resource.data.role is string;

      // Allow Admins to delete any user document
      allow delete: if isAdmin();
    }
    
    // Define rules for other collections here, if any
  }
}
